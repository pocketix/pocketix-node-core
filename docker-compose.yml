version: "3.9"

services:
  express:
    build:
      context: backend
      dockerfile: Dockerfile
    expose:
      - "3000"
    ports:
      - "3000:3000"
    networks:
      - network
    links:
      - postgres
      - influxdb
    depends_on:
      - postgres
      - influxdb
    restart: unless-stopped

  serverless:
    build:
      context: backend
      dockerfile: ServerlessDockerfile
    expose:
      - "4000"
    ports:
      - "4000:4000"
    networks:
      - network
    links:
      - postgres
      - influxdb
    depends_on:
      - postgres
      - influxdb
    restart: unless-stopped

  postgres:
    image: postgres:14.2
    build:
      context: backend
      dockerfile: PostgreDockerfile
    restart: unless-stopped
    hostname: postgres
    environment:
      - POSTGRES_DB=home
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    expose:
      - "4200"
    ports:
      - "4200:4200"
    networks:
      - network
    depends_on:
      - express

  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - network

  influxdb:
    image: influxdb:2.2.0
    build:
      context: backend
      dockerfile: InfluxDockerfile
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    networks:
      - network
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-user
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      - DOCKER_INFLUXDB_INIT_ORG=home
      - DOCKER_INFLUXDB_INIT_BUCKET=bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=Fgp2ozMxmkYnUBkzwLpkx6ydOVXyQqF4-ZPctGjv8-xkirYPYRvoBtrpAHMCr_joYoJMOqZjl8djjuyOx-MR_A==
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  network:
    driver: bridge
