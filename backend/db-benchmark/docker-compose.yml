version: "3.9"

services:
  dynamo:
    image: amazon/dynamodb-local:1.16.0
    restart: unless-stopped
    hostname: dynamo
    expose:
      - "8000"
    ports:
      - "8000:8000"
    networks:
      - network

  postgres:
    image: postgres:14.2
    restart: unless-stopped
    hostname: postgres
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb:2.0.6
    restart: unless-stopped
    ports:
      - "8086:8086"
    networks:
      - network
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-user
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_ORG_ID=fc015024af17e8aa
      - DOCKER_INFLUXDB_INIT_BUCKET=default
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=0srXHadc_qKZLnLP7396XeeFx6Fi2jUleVx4yrTZhU2MhCMaA-7RUjbR5Smtrupffy3AbBH9g1Ot6X1o_ZGeAA==
    healthcheck:
      test: [ "CMD", "influx", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:5.0.3
    hostname: mongo
    command: mongod --port 8888
    expose:
      - "8888"
    ports:
      - "8888:8888"
    networks:
      - network

  test:
    build:
      context: .
      dockerfile: TestDockerFile
    networks:
      - network
    restart: on-failure
    environment:
      #file: "first100.json"
      #file: "boiler0910-series.json" #this is a large file, and it will take a considerable amount of time to finish
      file: "data.json"
      postgres: "postgres"
      mongo: "mongo"
      influx: "influxdb"
      dynamo: "dynamo"
    links:
      - postgres
      - dynamo
      - mongo
      - influxdb
    depends_on:
      dynamo:
        condition: service_started
      mongo:
        condition: service_started
      postgres:
        condition: service_started
      influxdb:
        condition: service_healthy

networks:
  network:
    driver: bridge

