service: influx-lambda
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  serverless-offline:
    httpPort: 4000
    #useDocker: true # comment this out when using from dockerfile (to prevent dockerception)
    noPrependStageInUrl: true
    host: 0.0.0.0

package:
    individually: true    

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    URL: "http://192.168.0.103:8086"
    ORG: "home"
    TOKEN: "Fgp2ozMxmkYnUBkzwLpkx6ydOVXyQqF4-ZPctGjv8-xkirYPYRvoBtrpAHMCr_joYoJMOqZjl8djjuyOx-MR_A=="
    bucket: "bruli"
  stage: test
  deploymentBucket: aaa44
  region: us-east-1


functions:
  statistics:
    handler: src/main.statistics
    events:
      - http:          
          path: statistics
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  aggregate:
    handler: src/main.aggregate
    events:
      - http:          
          path: statistics/aggregate/{operation}
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  saveData:
    handler: src/main.saveData
    events:
      - http:          
          path: statistics/saveData
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  lastOccurenceOfValue:
    handler: src/main.lastOccurrenceOfValue
    events:
      - http:
          path: statistics/lastOccurrenceOfValue/{operator}
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  differenceBetweenFirstAndLast:
    handler: src/main.differenceBetweenFirstAndLast
    events:
      - http:
          path: statistics/differenceBetweenFirstAndLast
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  parameterAggregationWithMultipleStarts:
    handler: src/main.parameterAggregationWithMultipleStarts
    events:
      - http:
          path: statistics/parameterAggregationWithMultipleStarts
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6

  filterDistinctValue:
    handler: src/main.filterDistinctValue
    events:
      - http:
          path: statistics/filterDistinctValue
          method: post
          cors: true
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 29 # optional, in seconds, default is 6
